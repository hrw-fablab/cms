# Generated by Django 3.2.16 on 2023-02-08 09:52

import blocks.blocks
import blocks.blocks.spacer
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.contrib.forms.models
import wagtail.contrib.table_block.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailcache.cache
import wagtailmedia.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("persons", "0001_initial"),
        ("events", "0001_initial"),
        ("core", "0002_initial"),
        ("wagtailcore", "0083_workflowcontenttype"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                ("date", models.DateField()),
                ("introduction", models.CharField(max_length=255)),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "heading",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        )
                                    ],
                                    label="Ãœberschrift",
                                ),
                            ),
                            (
                                "paragraph",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "h3",
                                                    "ul",
                                                    "link",
                                                    "document-link",
                                                    "image",
                                                    "embed",
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Absatz",
                                ),
                            ),
                            (
                                "split",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "ul",
                                                    "document-link",
                                                    "link",
                                                ],
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Split",
                                ),
                            ),
                            (
                                "grid",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "style",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("default", "Default"),
                                                    ("variation", "Variation"),
                                                ]
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "card",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.TextBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "link",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Wenn die Seite extern ist oder es sich um ein Dokument handelt. Muss die url angeben werden",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "new_tab",
                                                                    wagtail.blocks.BooleanBlock(
                                                                        help_text="Wenn die neue Seite in einen neuen Tab geÃ¶ffnet werden soll",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Karte",
                                                        ),
                                                    ),
                                                    (
                                                        "person",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "person",
                                                                    blocks.blocks.PersonChooserBlock(
                                                                        required=False
                                                                    ),
                                                                )
                                                            ],
                                                            label="Person",
                                                        ),
                                                    ),
                                                ],
                                                label="Grid Elemente",
                                            ),
                                        ),
                                    ],
                                    label="Grid",
                                ),
                            ),
                            (
                                "gallery",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "contain",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Wenn z.B. von Logos das SeitenverhÃ¤ltnis beibehalten bleiben soll, sodass das Logo nicht abgeschnitten wird.",
                                                label="Cointain Aspect Ratio",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                    ("tiny", "5 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "image",
                                                        wagtail.images.blocks.ImageChooserBlock(),
                                                    ),
                                                    (
                                                        "video",
                                                        wagtailmedia.blocks.VideoChooserBlock(),
                                                    ),
                                                    (
                                                        "embed",
                                                        wagtail.embeds.blocks.EmbedBlock(),
                                                    ),
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Galerie",
                                ),
                            ),
                            (
                                "blockquote",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "cite",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ],
                                    label="Zitat",
                                ),
                            ),
                            (
                                "spacer",
                                blocks.blocks.spacer.SpacerBlock(label="Spacer"),
                            ),
                            (
                                "video",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "video",
                                            wagtailmedia.blocks.VideoChooserBlock(
                                                icon="media", required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Video",
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Bild",
                                ),
                            ),
                            (
                                "embed",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "embed",
                                            wagtail.embeds.blocks.EmbedBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Website einbetten",
                                ),
                            ),
                            (
                                "card",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.URLBlock(
                                                help_text="Wenn die Seite extern ist oder es sich um ein Dokument handelt. Muss die url angeben werden",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "new_tab",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Wenn die neue Seite in einen neuen Tab geÃ¶ffnet werden soll",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Card",
                                ),
                            ),
                            (
                                "html",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "code",
                                            wagtail.blocks.RawHTMLBlock(required=False),
                                        )
                                    ],
                                    label="HTML",
                                ),
                            ),
                            (
                                "banner",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "illustration",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Banner",
                                ),
                            ),
                            (
                                "project",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "members",
                                            blocks.blocks.ProjectChooserBlock(
                                                label="Projektmitglieder", required=True
                                            ),
                                        ),
                                        (
                                            "headings",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Trenne Projektrollen durch Ãœberschriften",
                                                label="Projektrollen Ãœberschriften",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Projekt Mitglieder",
                                ),
                            ),
                            (
                                "table",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "table",
                                            wagtail.contrib.table_block.blocks.TableBlock(
                                                required=False
                                            ),
                                        )
                                    ],
                                    label="Tabelle",
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Projekt",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="SearchPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Suche",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="ProjectPageLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("url", models.URLField()),
                ("title", models.CharField(max_length=255)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("none", "none"),
                            ("teach", "Lehre"),
                            ("open", "Offenes Angebot"),
                            ("school", "SchÃ¼lerkurse"),
                            ("workshop", "Workshop"),
                            ("extern", "Extern"),
                            ("event", "FabLab Event"),
                        ],
                        default="none",
                        max_length=255,
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_links",
                        to="pages.projectpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Projekte",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="LinkPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Link Sammlung",
            },
            bases=(
                wagtailcache.cache.WagtailCacheMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "heading",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        )
                                    ],
                                    label="Ãœberschrift",
                                ),
                            ),
                            (
                                "paragraph",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "h3",
                                                    "ul",
                                                    "link",
                                                    "document-link",
                                                    "image",
                                                    "embed",
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Absatz",
                                ),
                            ),
                            (
                                "hero",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(
                                                max_length=255, required=False
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "video",
                                            wagtailmedia.blocks.VideoChooserBlock(
                                                icon="media", required=False
                                            ),
                                        ),
                                    ],
                                    label="Hero",
                                ),
                            ),
                            (
                                "split",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "ul",
                                                    "document-link",
                                                    "link",
                                                ],
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Split",
                                ),
                            ),
                            (
                                "grid",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "style",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("default", "Default"),
                                                    ("variation", "Variation"),
                                                ]
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "card",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.TextBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "link",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Wenn die Seite extern ist oder es sich um ein Dokument handelt. Muss die url angeben werden",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "new_tab",
                                                                    wagtail.blocks.BooleanBlock(
                                                                        help_text="Wenn die neue Seite in einen neuen Tab geÃ¶ffnet werden soll",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Karte",
                                                        ),
                                                    ),
                                                    (
                                                        "person",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "person",
                                                                    blocks.blocks.PersonChooserBlock(
                                                                        required=False
                                                                    ),
                                                                )
                                                            ],
                                                            label="Person",
                                                        ),
                                                    ),
                                                ],
                                                label="Grid Elemente",
                                            ),
                                        ),
                                    ],
                                    label="Grid",
                                ),
                            ),
                            (
                                "grabber",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    (
                                                        "newspaper",
                                                        "Zeitungslayout mit einem Hauptelement",
                                                    ),
                                                    (
                                                        "magazine",
                                                        "Zeitungslayout mit zwei Hauptelementen",
                                                    ),
                                                    ("medium", "3 Element pro Reihe"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "style",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("default", "Default"),
                                                    ("variation", "Variation"),
                                                ]
                                            ),
                                        ),
                                        (
                                            "amount",
                                            wagtail.blocks.IntegerBlock(default=5),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "pages",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.PageChooserBlock()
                                            ),
                                        ),
                                    ],
                                    label="Seiten Inhalte",
                                ),
                            ),
                            (
                                "gallery",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "contain",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Wenn z.B. von Logos das SeitenverhÃ¤ltnis beibehalten bleiben soll, sodass das Logo nicht abgeschnitten wird.",
                                                label="Cointain Aspect Ratio",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                    ("tiny", "5 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "image",
                                                        wagtail.images.blocks.ImageChooserBlock(),
                                                    ),
                                                    (
                                                        "video",
                                                        wagtailmedia.blocks.VideoChooserBlock(),
                                                    ),
                                                    (
                                                        "embed",
                                                        wagtail.embeds.blocks.EmbedBlock(),
                                                    ),
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Galerie",
                                ),
                            ),
                            (
                                "blockquote",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "cite",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ],
                                    label="Zitat",
                                ),
                            ),
                            (
                                "spacer",
                                blocks.blocks.spacer.SpacerBlock(label="Spacer"),
                            ),
                            (
                                "video",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "video",
                                            wagtailmedia.blocks.VideoChooserBlock(
                                                icon="media", required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Video",
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Bild",
                                ),
                            ),
                            (
                                "embed",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "embed",
                                            wagtail.embeds.blocks.EmbedBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Website einbetten",
                                ),
                            ),
                            (
                                "card",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.URLBlock(
                                                help_text="Wenn die Seite extern ist oder es sich um ein Dokument handelt. Muss die url angeben werden",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "new_tab",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Wenn die neue Seite in einen neuen Tab geÃ¶ffnet werden soll",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Card",
                                ),
                            ),
                            (
                                "person",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "person",
                                            blocks.blocks.PersonChooserBlock(
                                                required=False
                                            ),
                                        )
                                    ],
                                    label="Person",
                                ),
                            ),
                            (
                                "html",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "code",
                                            wagtail.blocks.RawHTMLBlock(required=False),
                                        )
                                    ],
                                    label="HTML",
                                ),
                            ),
                            (
                                "banner",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "illustration",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Banner",
                                ),
                            ),
                            (
                                "project",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "members",
                                            blocks.blocks.ProjectChooserBlock(
                                                label="Projektmitglieder", required=True
                                            ),
                                        ),
                                        (
                                            "headings",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Trenne Projektrollen durch Ãœberschriften",
                                                label="Projektrollen Ãœberschriften",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Projekt Mitglieder",
                                ),
                            ),
                            (
                                "table",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "table",
                                            wagtail.contrib.table_block.blocks.TableBlock(
                                                required=False
                                            ),
                                        )
                                    ],
                                    label="Tabelle",
                                ),
                            ),
                            (
                                "calendar",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "events",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Kalendar",
                                ),
                            ),
                            (
                                "call",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(
                                                max_length=140, required=False
                                            ),
                                        ),
                                        (
                                            "link_text",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                    ],
                                    label="Call to Action",
                                ),
                            ),
                            (
                                "events",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        )
                                    ],
                                    label="",
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Startseite",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="FormPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "to_address",
                    models.CharField(
                        blank=True,
                        help_text="Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.",
                        max_length=255,
                        validators=[wagtail.contrib.forms.models.validate_to_address],
                        verbose_name="to address",
                    ),
                ),
                (
                    "from_address",
                    models.EmailField(
                        blank=True, max_length=255, verbose_name="from address"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="subject"
                    ),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "heading",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        )
                                    ],
                                    label="Ãœberschrift",
                                ),
                            ),
                            (
                                "paragraph",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "h3",
                                                    "ul",
                                                    "link",
                                                    "document-link",
                                                    "image",
                                                    "embed",
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Absatz",
                                ),
                            ),
                            (
                                "split",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "ul",
                                                    "document-link",
                                                    "link",
                                                ],
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Split",
                                ),
                            ),
                            (
                                "grid",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "style",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("default", "Default"),
                                                    ("variation", "Variation"),
                                                ]
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "card",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.TextBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "link",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Wenn die Seite extern ist oder es sich um ein Dokument handelt. Muss die url angeben werden",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "new_tab",
                                                                    wagtail.blocks.BooleanBlock(
                                                                        help_text="Wenn die neue Seite in einen neuen Tab geÃ¶ffnet werden soll",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Karte",
                                                        ),
                                                    ),
                                                    (
                                                        "person",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "person",
                                                                    blocks.blocks.PersonChooserBlock(
                                                                        required=False
                                                                    ),
                                                                )
                                                            ],
                                                            label="Person",
                                                        ),
                                                    ),
                                                ],
                                                label="Grid Elemente",
                                            ),
                                        ),
                                    ],
                                    label="Grid",
                                ),
                            ),
                            (
                                "gallery",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "contain",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Wenn z.B. von Logos das SeitenverhÃ¤ltnis beibehalten bleiben soll, sodass das Logo nicht abgeschnitten wird.",
                                                label="Cointain Aspect Ratio",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                    ("tiny", "5 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "image",
                                                        wagtail.images.blocks.ImageChooserBlock(),
                                                    ),
                                                    (
                                                        "video",
                                                        wagtailmedia.blocks.VideoChooserBlock(),
                                                    ),
                                                    (
                                                        "embed",
                                                        wagtail.embeds.blocks.EmbedBlock(),
                                                    ),
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Galerie",
                                ),
                            ),
                            (
                                "banner",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "illustration",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Banner",
                                ),
                            ),
                            (
                                "video",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "video",
                                            wagtailmedia.blocks.VideoChooserBlock(
                                                icon="media", required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Video",
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Bild",
                                ),
                            ),
                            (
                                "embed",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "embed",
                                            wagtail.embeds.blocks.EmbedBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Website einbetten",
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                ("response_switch", models.BooleanField(blank=True, null=True)),
                ("response_subject", models.TextField(blank=True, null=True)),
                ("response_message", models.TextField(blank=True, null=True)),
                ("thank_you_text", wagtail.fields.RichTextField(blank=True)),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="events.event",
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Form Seite",
            },
            bases=(
                wagtail.contrib.forms.models.FormMixin,
                wagtailcache.cache.WagtailCacheMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="FormField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "clean_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Safe name of the form field, the label converted to ascii_snake_case",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="The label of the form field",
                        max_length=255,
                        verbose_name="label",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(default=True, verbose_name="required"),
                ),
                (
                    "choices",
                    models.TextField(
                        blank=True,
                        help_text="Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.",
                        verbose_name="choices",
                    ),
                ),
                (
                    "default_value",
                    models.TextField(
                        blank=True,
                        help_text="Default value. Comma or new line separated values supported for checkboxes.",
                        verbose_name="default value",
                    ),
                ),
                (
                    "help_text",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="help text"
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("singleline", "Single line text"),
                            ("multiline", "Multi-line text"),
                            ("email", "Email"),
                            ("number", "Number"),
                            ("url", "URL"),
                            ("checkbox", "Checkbox"),
                            ("checkboxes", "Checkboxes"),
                            ("dropdown", "Drop down"),
                            ("multiselect", "Multiple select"),
                            ("radio", "Radio buttons"),
                            ("date", "Date"),
                            ("datetime", "Date/time"),
                            ("hidden", "Hidden field"),
                            ("pageParam", "Page Parameter"),
                        ],
                        max_length=16,
                        verbose_name="field type",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_fields",
                        to="pages.formpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FolderPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ordner",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="FlexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "heading",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        )
                                    ],
                                    label="Ãœberschrift",
                                ),
                            ),
                            (
                                "paragraph",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "h3",
                                                    "ul",
                                                    "link",
                                                    "document-link",
                                                    "image",
                                                    "embed",
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Absatz",
                                ),
                            ),
                            (
                                "split",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(
                                                features=[
                                                    "bold",
                                                    "italic",
                                                    "ul",
                                                    "document-link",
                                                    "link",
                                                ],
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Split",
                                ),
                            ),
                            (
                                "grid",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "style",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("default", "Default"),
                                                    ("variation", "Variation"),
                                                ]
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "card",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.TextBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "link",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Wenn die Seite extern ist oder es sich um ein Dokument handelt. Muss die url angeben werden",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "new_tab",
                                                                    wagtail.blocks.BooleanBlock(
                                                                        help_text="Wenn die neue Seite in einen neuen Tab geÃ¶ffnet werden soll",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Karte",
                                                        ),
                                                    ),
                                                    (
                                                        "person",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "person",
                                                                    blocks.blocks.PersonChooserBlock(
                                                                        required=False
                                                                    ),
                                                                )
                                                            ],
                                                            label="Person",
                                                        ),
                                                    ),
                                                ],
                                                label="Grid Elemente",
                                            ),
                                        ),
                                    ],
                                    label="Grid",
                                ),
                            ),
                            (
                                "grabber",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    (
                                                        "newspaper",
                                                        "Zeitungslayout mit einem Hauptelement",
                                                    ),
                                                    (
                                                        "magazine",
                                                        "Zeitungslayout mit zwei Hauptelementen",
                                                    ),
                                                    ("medium", "3 Element pro Reihe"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "style",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("default", "Default"),
                                                    ("variation", "Variation"),
                                                ]
                                            ),
                                        ),
                                        (
                                            "amount",
                                            wagtail.blocks.IntegerBlock(default=5),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "pages",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.PageChooserBlock()
                                            ),
                                        ),
                                    ],
                                    label="Seiten Inhalte",
                                ),
                            ),
                            (
                                "gallery",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "contain",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Wenn z.B. von Logos das SeitenverhÃ¤ltnis beibehalten bleiben soll, sodass das Logo nicht abgeschnitten wird.",
                                                label="Cointain Aspect Ratio",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                    ("tiny", "5 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                        (
                                            "cards",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "image",
                                                        wagtail.images.blocks.ImageChooserBlock(),
                                                    ),
                                                    (
                                                        "video",
                                                        wagtailmedia.blocks.VideoChooserBlock(),
                                                    ),
                                                    (
                                                        "embed",
                                                        wagtail.embeds.blocks.EmbedBlock(),
                                                    ),
                                                ]
                                            ),
                                        ),
                                    ],
                                    label="Galerie",
                                ),
                            ),
                            (
                                "blockquote",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "cite",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ],
                                    label="Zitat",
                                ),
                            ),
                            (
                                "spacer",
                                blocks.blocks.spacer.SpacerBlock(label="Spacer"),
                            ),
                            (
                                "video",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "video",
                                            wagtailmedia.blocks.VideoChooserBlock(
                                                icon="media", required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Video",
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Bild",
                                ),
                            ),
                            (
                                "embed",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "embed",
                                            wagtail.embeds.blocks.EmbedBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "accent",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Website einbetten",
                                ),
                            ),
                            (
                                "card",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.URLBlock(
                                                help_text="Wenn die Seite extern ist oder es sich um ein Dokument handelt. Muss die url angeben werden",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "new_tab",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Wenn die neue Seite in einen neuen Tab geÃ¶ffnet werden soll",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Card",
                                ),
                            ),
                            (
                                "person",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "person",
                                            blocks.blocks.PersonChooserBlock(
                                                required=False
                                            ),
                                        )
                                    ],
                                    label="Person",
                                ),
                            ),
                            (
                                "html",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "code",
                                            wagtail.blocks.RawHTMLBlock(required=False),
                                        )
                                    ],
                                    label="HTML",
                                ),
                            ),
                            (
                                "banner",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "illustration",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Banner",
                                ),
                            ),
                            (
                                "project",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "layout",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("extrem", "1 x N"),
                                                    ("large", "2 x N"),
                                                    ("medium", "3 x N"),
                                                    ("small", "4 x N"),
                                                ],
                                                help_text="Die Anzahl an Elementen in einer Horizontalen Reihe",
                                            ),
                                        ),
                                        (
                                            "members",
                                            blocks.blocks.ProjectChooserBlock(
                                                label="Projektmitglieder", required=True
                                            ),
                                        ),
                                        (
                                            "headings",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Trenne Projektrollen durch Ãœberschriften",
                                                label="Projektrollen Ãœberschriften",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Projekt Mitglieder",
                                ),
                            ),
                            (
                                "table",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "table",
                                            wagtail.contrib.table_block.blocks.TableBlock(
                                                required=False
                                            ),
                                        )
                                    ],
                                    label="Tabelle",
                                ),
                            ),
                            (
                                "calendar",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "events",
                                            wagtail.blocks.BooleanBlock(required=False),
                                        ),
                                    ],
                                    label="Kalendar",
                                ),
                            ),
                            (
                                "call",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "text",
                                            wagtail.blocks.TextBlock(
                                                max_length=140, required=False
                                            ),
                                        ),
                                        (
                                            "link_text",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                    ],
                                    label="Call to Action",
                                ),
                            ),
                            (
                                "events",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=False),
                                        )
                                    ],
                                    label="",
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Flexible Seite",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="DeviceIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "GerÃ¤te",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="CollectionPagePage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("title", models.CharField(max_length=255, null=True)),
                ("amount", models.IntegerField()),
                (
                    "grabber",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_pages",
                        to="pages.linkpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CollectionPageLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("url", models.URLField()),
                ("title", models.CharField(max_length=255)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("none", "none"),
                            ("teach", "Lehre"),
                            ("open", "Offenes Angebot"),
                            ("school", "SchÃ¼lerkurse"),
                            ("workshop", "Workshop"),
                            ("extern", "Extern"),
                            ("event", "FabLab Event"),
                        ],
                        default="none",
                        max_length=255,
                    ),
                ),
                ("expire", models.DateField(blank=True, null=True)),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_links",
                        to="pages.linkpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ArticlePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                ("date", models.DateField()),
                ("introduction", models.CharField(max_length=150)),
                ("body", wagtail.fields.RichTextField()),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="persons.person",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Artikel",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="ArticleIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "index",
                    models.CharField(
                        choices=[("index", "index"), ("noindex", "noindex")],
                        default="index",
                        max_length=255,
                    ),
                ),
                (
                    "og_image_alt",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "og_type",
                    models.CharField(
                        choices=[
                            ("website", "website"),
                            ("article", "article"),
                            ("profile", "profile"),
                        ],
                        default="website",
                        max_length=255,
                    ),
                ),
                (
                    "tw_size",
                    models.CharField(
                        choices=[
                            ("summary_large_image", "summary_large_image"),
                            ("summary", "summary"),
                            ("player", "player"),
                        ],
                        default="summary_large_image",
                        max_length=255,
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.fablabimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Index Seite",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
    ]
